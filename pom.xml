<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.atteo</groupId>
		<artifactId>parent-oss</artifactId>
		<version>1.0</version>
	</parent>
	<artifactId>evo-services-parent</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>Evo Services Framework</name>
	<description>Java application development framework focusing on configurability and easy testing.
		Promotes proven and simple solutions and specifically avoids the use of complicated and deprecated ones.

		It offers modular service framework based on Google Guice, Maven-like configuration management,
		logging with SLF4J, support for common JavaEE technologies: JDBC, JPA, JMS, JTA, JMX, Java Servlet API, JAX-RS.
		Promotes fresh approach to JavaEE development with dependency injection, annotation processing,
		modular design and easy unit testing.</description>
	<!-- Javadoc adds /apidocs to this URL when it tries to find Javadocs. Make it happy. -->
	<url>http://atteo.org/static/evo-services-parent</url>
	<developers>
		<developer>
			<id>sentinel</id>
			<name>SÅ‚awek Piotrowski</name>
			<email>sentinel@atteo.com</email>
		</developer>
		<developer>
			<id>tomahawk</id>
			<name>Tomek Piotrowski</name>
			<email>tomek.piotrowski@atteo.com</email>
		</developer>
	</developers>
	<modules>
		<module>database</module>
		<module>eventbus</module>
		<module>firebuglogger</module>
		<module>h2</module>
		<module>hibernate</module>
		<module>hibernate-search</module>
		<module>hornetq</module>
		<module>janino</module>
		<module>jersey</module>
		<module>jetty</module>
		<module>jminix</module>
		<module>jmx</module>
		<module>jpa</module>
		<module>jta-atomikos</module>
		<module>jta</module>
		<module>logback</module>
		<module>migrations</module>
		<module>services</module>
		<module>shiro</module>
		<module>tests-eventbus</module>
		<module>tests-fixtures</module>
		<module>tests-services</module>
		<module>tests-shiro</module>
	</modules>
	<scm>
		<connection>scm:git:https://code.google.com/p/evo-services-parent/</connection>
		<url>https://code.google.com/p/evo-services-parent/source/browse/</url>
	</scm>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>evo-classindex</artifactId>
				<version>1.0</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<profiles>
		<profile>
			<id>examples</id>
			<modules>
				<module>examples</module>
			</modules>
		</profile>
		<profile>
			<id>service-docs</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>default-cli</id>
								<goals>
									<goal>aggregate</goal>
								</goals>
								<configuration>
									<doclet>org.atteo.evo.config.doclet.ConfigDoclet</doclet>
									<docletArtifacts>
										<docletArtifact>
											<groupId>${project.groupId}</groupId>
											<artifactId>evo-config-doclet</artifactId>
											<version>${project.version}</version>
										</docletArtifact>
									</docletArtifacts>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>endorsed</id>
			<activation>
				<property>
					<name>sun.boot.class.path</name>
				</property>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<artifactId>maven-compiler-plugin</artifactId>
							<dependencies>
								<dependency>
									<groupId>javax</groupId>
									<artifactId>javaee-endorsed-api</artifactId>
									<version>6.0</version>
								</dependency>
							</dependencies>
							<configuration>
								<!-- javaee6 contains upgrades of APIs contained within the JDK itself.
								As such these need to be placed on the bootclasspath, rather than classpath of the
								compiler.
								If you don't make use of these new updated API, you can delete the profile.
								On non-SUN jdk, you will need to create a similar profile for your jdk, with the similar property as sun.boot.class.path in Sun's JDK.-->
								<compilerArguments>
									<bootclasspath>${settings.localRepository}/javax/javaee-endorsed-api/6.0/javaee-endorsed-api-6.0.jar${path.separator}${sun.boot.class.path}</bootclasspath>
								</compilerArguments>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
		<profile>
			<id>jrebel</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.zeroturnaround</groupId>
						<artifactId>jrebel-maven-plugin</artifactId>
						<version>1.1.0</version>
						<executions>
							<execution>
								<id>generate-rebel-xml</id>
								<phase>process-resources</phase>
								<goals>
									<goal>generate</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>

